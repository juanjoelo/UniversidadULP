/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package universidadulp.vistas;

import com.sun.org.apache.bcel.internal.generic.ObjectType;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import universidadulp.AccesoADatos.AlumnoData;
import universidadulp.AccesoADatos.InscripcionData;
import universidadulp.AccesoADatos.MateriaData;
import universidadulp.Entidades.Alumno;
import universidadulp.Entidades.Materia;

/**
 *
 * @author juan_
 */
public class FormularioDeInscripcion extends javax.swing.JInternalFrame {
    
    private AlumnoData aluData;
    private MateriaData mateData;
    private InscripcionData inscData;
    private DefaultTableModel modelo;
    
    /**
     * Creates new form FormularioDeInscripcion
     */
    public FormularioDeInscripcion() {
        initComponents();
        aluData = new AlumnoData();
        mateData = new MateriaData();
        inscData = new InscripcionData();
        armarModelo();
        inicializarCombo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        comboSeleccionarAlumno = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        botonRadioMateriasInscriptas = new javax.swing.JRadioButton();
        botonRadioMateriasNoInscriptas = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaFormularioInscripcion = new javax.swing.JTable();
        botonInscribir = new javax.swing.JButton();
        botonAnularInscripcion = new javax.swing.JButton();
        botonSalir = new javax.swing.JButton();

        jLabel1.setText("Formulario de inscripción");

        jLabel2.setText("Seleccione un alumno:");

        jLabel3.setText("Listado de Materias");

        botonRadioMateriasInscriptas.setText("Materias Inscriptas");
        botonRadioMateriasInscriptas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRadioMateriasInscriptasActionPerformed(evt);
            }
        });

        botonRadioMateriasNoInscriptas.setText("Materias no inscriptas");
        botonRadioMateriasNoInscriptas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRadioMateriasNoInscriptasActionPerformed(evt);
            }
        });

        tablaFormularioInscripcion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Nombre", "Año"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tablaFormularioInscripcion);

        botonInscribir.setText("Inscribir");
        botonInscribir.setEnabled(false);

        botonAnularInscripcion.setText("Anular inscripción");
        botonAnularInscripcion.setEnabled(false);
        botonAnularInscripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAnularInscripcionActionPerformed(evt);
            }
        });

        botonSalir.setText("Salir");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(118, 118, 118)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(126, 126, 126)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(botonRadioMateriasInscriptas)
                                .addGap(54, 54, 54)
                                .addComponent(botonRadioMateriasNoInscriptas))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(59, 59, 59)
                                .addComponent(comboSeleccionarAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(botonInscribir)
                .addGap(47, 47, 47)
                .addComponent(botonAnularInscripcion)
                .addGap(59, 59, 59)
                .addComponent(botonSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(comboSeleccionarAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonRadioMateriasInscriptas)
                    .addComponent(botonRadioMateriasNoInscriptas))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonInscribir)
                    .addComponent(botonAnularInscripcion)
                    .addComponent(botonSalir))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonRadioMateriasNoInscriptasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRadioMateriasNoInscriptasActionPerformed
        
        if(botonRadioMateriasInscriptas.isSelected()){
            botonRadioMateriasInscriptas.setSelected(false);
            tablaFormularioInscripcion.removeAll();
            armarModelo();
        } 
        if(!botonRadioMateriasNoInscriptas.isSelected()){
            modelo.setRowCount(0);
            tablaFormularioInscripcion.setModel(modelo);
            botonInscribir.setEnabled(false);
          
        }else{
            botonAnularInscripcion.setEnabled(false);
            botonInscribir.setEnabled(true);
            int dniAlumno = recibirDNIAlumno(); 
            List<Materia> materias = inscData.obtenerMateriasNOCursadas
                                     (aluData.buscarAlumnoPorDni(dniAlumno).getIdAlumno());
            cargarATabla(materias);
        }
    }//GEN-LAST:event_botonRadioMateriasNoInscriptasActionPerformed
    
    private void botonRadioMateriasInscriptasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRadioMateriasInscriptasActionPerformed
        if(botonRadioMateriasNoInscriptas.isSelected()){
            botonRadioMateriasNoInscriptas.setSelected(false);
            tablaFormularioInscripcion.removeAll();
            armarModelo();
        } 
        if(!botonRadioMateriasInscriptas.isSelected()){
            modelo.setRowCount(0);
            tablaFormularioInscripcion.setModel(modelo);
            botonAnularInscripcion.setEnabled(false);
            
        }else{
            botonAnularInscripcion.setEnabled(true);
            botonInscribir.setEnabled(false);
            int dniAlumno = recibirDNIAlumno(); 
            List<Materia> materias = inscData.obtenerMateriasCursadas
                                     (aluData.buscarAlumnoPorDni(dniAlumno).getIdAlumno());
            cargarATabla(materias);
        }
        
       
    }//GEN-LAST:event_botonRadioMateriasInscriptasActionPerformed

    private void botonAnularInscripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAnularInscripcionActionPerformed
        try{
            int row = tablaFormularioInscripcion.getSelectedRow();
        int col = 0; //Es 0 porque ID esta en la primera Columna
        Object idMateria = (tablaFormularioInscripcion.getModel().getValueAt(row, col)); //La unica manera que consegui
        inscData.borrarInscripcionMateriaAlumno(aluData.                                 //de obtener el id de la tabla es usando
                buscarAlumnoPorDni(recibirDNIAlumno()).                                  //Object, y getModel().getValueAt()      ////Se reutiliza el metodo recibirDNIAlumno()// 
                getIdAlumno(),                                                           // que retorna Object (Luego se utiliza. ////porque no hay otra manera de conseguir el DNI.//
                Integer.parseInt(idMateria.toString()));                                 //Una combinacion de .toString y parseInt para poder utilizarlo como int).
        //TODO IMPORTANTE: SOLUCIONAR EL BUG DE LOS BOTONES QUE SI ESTA VACIO LAS MATERIAS INSCRIPTAS NO MUESTRA LAS NO INSCRIPTAS!! // BUG SOLUCIONADO
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Hubo un error.");
        }
        
    }//GEN-LAST:event_botonAnularInscripcionActionPerformed

    private void inicializarCombo(){
        List<Alumno> listaAlumnos = aluData.listarAlumnos();
        for(Alumno al:listaAlumnos){
            //TODO: Cambiar el toString() de Alumno para no tener que usar los getters aca.
            comboSeleccionarAlumno.addItem(al.getNombre()+" "+al.getApellido()+ " DNI:"+ al.getDni());
        } 
    }
    
     private void armarModelo(){
        modelo = new DefaultTableModel();
        modelo.addColumn("ID");
        modelo.addColumn("Nombre");
        modelo.addColumn("Año");
        tablaFormularioInscripcion.setModel(modelo); 
    }
    
    private void cargarATabla(List<Materia> materias){
        for(Materia mat:materias){
            modelo.addRow(new Object[]{mat.getIdMateria(),
            mat.getNombre(),
            mat.getAnioMateria()});
            }
        
        tablaFormularioInscripcion.setModel(modelo); 
  }

    private int recibirDNIAlumno(){
        String alumno = comboSeleccionarAlumno.getSelectedItem().toString();
        int dniAlumno = Integer.parseInt(alumno.substring(alumno.lastIndexOf(":") + 1)); 
        return dniAlumno;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAnularInscripcion;
    private javax.swing.JButton botonInscribir;
    private javax.swing.JRadioButton botonRadioMateriasInscriptas;
    private javax.swing.JRadioButton botonRadioMateriasNoInscriptas;
    private javax.swing.JButton botonSalir;
    private javax.swing.JComboBox<String> comboSeleccionarAlumno;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaFormularioInscripcion;
    // End of variables declaration//GEN-END:variables
}
